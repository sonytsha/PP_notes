Given an integer array nums, print the maximum difference between two successive elements in its sorted form. If the array contains less than two elements, print 0.

You must write an algorithm that runs in linear time and uses linear extra space.

Input Format

First-line will contain T, number of test cases.
Each test cases contains an integer N, the size of the array and N space-separated integers describing elements of the array.
Output Format

Print the maximum difference between two successive elements in its sorted form for each test cases in new line.
Input 1:

2
4
3 6 9 1
3
2 6 1
Output 1:

3
4
Constraints:

1
<=
T
<=
5
1
<=
n
u
m
s
.
l
e
n
g
t
h
<=
10
5
0
<=
n
u
m
s
[
i
]
<=
10
9
Example
Input
2
4  
3 6 9 1
3  
2 6 1
Output
3
4


import java.util.Arrays;
import java.util.Scanner;
public class Main  {
    public static int maxGap(int[] nums) {
       if (nums == null || nums.length < 2) {
            return 0;
        }
        
        Arrays.sort(nums);
        
        int maxGap = 0;
        for(int i=1;i<nums.length; i++) {
            maxGap = Math.max(maxGap, nums[i] - nums[i-1]);
        }
        return maxGap;
    }
    

public static void main (String[] args) {
    Scanner sc = new Scanner(System.in);
    int T = sc.nextInt();
    for(int i = 0 ; i < T ;i++) {
        int n = sc.nextInt();
        int[] nums = new int[n];
        for(int j =0;j<n;j++) {
            nums[j] = sc.nextInt();
        }
            int maxGap = maxGap(nums);
            System.out.println(maxGap);
        }
        sc.close();
    }
}


EXPLANATION : let's break down the code line by line:

java
Copy code
import java.util.Arrays;
This line imports the Arrays class from the java.util package. We use this class later in the code to sort the array.
java
Copy code
public class MaxGapProblem {
This line defines a public class named MaxGapProblem. This class will contain our solution to the maximum gap problem.
java
Copy code
    public static int maxGap(int[] nums) {
This line defines a public static method named maxGap that takes an integer array (nums) as input and returns an integer value (the maximum gap). The static keyword means that the method belongs to the class itself and not to any specific instance of the class.
java
Copy code
        if (nums == null || nums.length < 2) {
            return 0;
        }
This block of code checks if the input array nums is either null or has less than two elements. If either condition is true, it means there are not enough elements in the array to calculate the maximum gap, so the method returns 0.
java
Copy code
        Arrays.sort(nums);
This line sorts the input array nums in ascending order using the Arrays.sort method. Sorting the array makes it easier to find the maximum gap between consecutive elements.
java
Copy code
        int maxGap = 0;
This line initializes a variable maxGap to store the maximum gap between consecutive elements. We initialize it to 0 as a starting point.
java
Copy code
        for (int i = 1; i < nums.length; i++) {
This line starts a loop that iterates over the elements of the sorted array nums. We start from index 1 (i = 1) because we want to compare each element with its previous element.
java
Copy code
            maxGap = Math.max(maxGap, nums[i] - nums[i - 1]);
Inside the loop, we calculate the difference between the current element (nums[i]) and its previous element (nums[i - 1]). We use the Math.max method to update the maxGap variable with the maximum of its current value and the calculated difference. This ensures that maxGap always stores the maximum gap found so far.
java
Copy code
        }
This line marks the end of the loop.
java
Copy code
        return maxGap;
